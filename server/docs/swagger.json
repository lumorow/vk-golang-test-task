{
    "swagger": "2.0",
    "info": {
        "title": "Film library",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/actor": {
            "post": {
                "description": "Creates a new actor.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Create actor",
                "parameters": [
                    {
                        "description": "Data of the new actor",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID of the created actor",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actor/{id}": {
            "delete": {
                "description": "Deletes an actor with the specified ID.",
                "tags": [
                    "Actors"
                ],
                "summary": "Delete actor by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Actor deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid actor ID param",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an actor with the specified ID based on the data passed in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Update actor by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data of the actor to update",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateActorInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Actor updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid actor ID param or request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actors": {
            "get": {
                "description": "Returns actors with their associated films based on the provided actor IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Get actors with associated films",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Actor IDs",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entity.ActorFilms"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or invalid actor ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/film": {
            "post": {
                "description": "Creates a new film.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "summary": "Create film",
                "parameters": [
                    {
                        "description": "Data of the new film",
                        "name": "film",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Film"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID of the created film",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/film/{id}": {
            "delete": {
                "description": "Deletes a film with the specified ID.",
                "tags": [
                    "Films"
                ],
                "summary": "Delete film by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Film ID to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Film deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid film ID param",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a film with the specified ID based on the data passed in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "summary": "Update film by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Film ID to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data of the film to update",
                        "name": "film",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateFilmInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Film updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid film ID param or request data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/films": {
            "get": {
                "description": "This endpoint allows searching for films based on actor name and film name fragments.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "summary": "Search for films by actor name and film name fragments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Actor name fragment",
                        "name": "actorNameFr",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Film name fragment",
                        "name": "filmNameFr",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entity.Film"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or invalid actor ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/films/sortType": {
            "get": {
                "description": "This endpoint retrieves films sorted by the specified criteria and associated with the provided actor IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "summary": "Retrieve films sorted by criteria and associated with actors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort type: rating, date, name.",
                        "name": "sortType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Actor IDs",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entity.Film"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or invalid actor ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Actor": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "entity.ActorFilms": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "films": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Film"
                    }
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "entity.Film": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "releaseDay": {
                    "type": "string"
                }
            }
        },
        "entity.UpdateActorInput": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "entity.UpdateFilmInput": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "releaseDay": {
                    "type": "string"
                }
            }
        }
    }
}